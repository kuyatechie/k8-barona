apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  labels:
    app: {{ .Release.Name }}-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      initContainers:
      - name: check-db-ready
        image: {{.Values.imageRegistry}}/postgres:alpine
        command: ['sh', '-c',
          'until pg_isready -h $DATABASE_HOSTNAME -p 5432;
          do echo waiting for database; sleep 2; done;']
        env:
          - name: DATABASE_HOSTNAME
            value: {{ .Release.Name }}-{{.Values.databaseHostnameSuffix}}
      containers:
      - name: myapp
        image: {{.Values.imageRegistry}}/myapp:{{.Values.myappTag}}
        imagePullPolicy: {{.Values.pullPolicy}}
        ports:
        - containerPort: {{.Values.myappPort}}
        env:
          - name: DATABASE_PASSWORD
            value: {{default "postgres" .Values.databasePassword}}
          - name: DATABASE_USER
            value: {{default "postgres" .Values.databaseUser}}
          - name: DATABASE_NAME
            value: {{default "myapp_db" .Values.databaseName}}
          - name: DATABASE_HOSTNAME
            value: {{ .Release.Name }}-{{.Values.databaseHostnameSuffix}}

---
apiVersion: v1
kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: default
  labels:
    app: {{ .Release.Name }}-deployment
spec:
  ports:
  - protocol: TCP
    port: {{.Values.myappPort}}
    targetPort: {{.Values.myappPort}}
  selector:
    app: myapp
  type: ClusterIP
status:
  loadBalancer: {}